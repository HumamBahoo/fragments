# .github/workflows/ci.yml

# Continuous Integration (CI) Workflow
name: ci

# This workflow will run on a push or pull request to branch 'main'. See:
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#on
on:
  pull_request:
    branches:
      - hbahoo-framgents
  push:
    branches:
      - hbahoo-framgents

jobs:
  lint:
    # job name will show up in GitHub Actions web UI
    name: ESLint
    # to run this on an Ubuntu VM since we'll deploy on Linux too
    runs-on: ubuntu-latest
    # the steps to run. if any fail, we stop process
    steps:
      # https://github.com/actions/checkout
      - name: Check out code
        uses: actions/checkout@v3

      # https://github.com/actions/setup-node
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          # use Node 18 LTS - https://github.com/actions/setup-node#supported-version-syntax
          node-version: '18'
          # cache npm dependencies, so they don't have to be downloaded next time - https://github.com/actions/setup-node#caching-packages-dependencies
          cache: 'npm'

      - name: Install node dependencies
        # use 'ci' vs. 'install' - https://docs.npmjs.com/cli/v8/commands/npm-ci
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install node dependencies and run Tests
        # There are two ways we could do this:
        #
        # 1. Call `npm ci` followed by `npm test` like so (NOTE: the use of | and -):
        # run: |
        # - npm install
        # - npm test
        #
        # 2. Use `install-ci-test` to do it in a single command, see https://docs.npmjs.com/cli/v8/commands/npm-install-ci-test
        # run: npm install-ci-test
        run: npm install-ci-test
